// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  username       String          @unique
  password       String
  active         Boolean         @default(false)
  activateTokens ActivateToken[]

  recipes Recipe[]
  ratings Rating[]

  @@map("users")
}

model Recipe {
  id               Int      @id @default(autoincrement())
  name             String
  description      String
  preparationTime  Int
  ingredients      String[] // Array of strings stored as JSON
  preparationSteps String[] // Array of strings stored as JSON
  images           Image[]
  cuisine          Cuisine
  creatorId        Int

  creator User     @relation(fields: [creatorId], references: [id])
  ratings Rating[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("recipes")
}

model Image {
  id       Int   @id @default(autoincrement())
  data     String 
  recipeId Int

  recipe Recipe @relation(fields: [recipeId], references: [id])

  @@map("images")
}

model Rating {
  id       Int   @id @default(autoincrement())
  value    Float
  userId   Int
  recipeId Int

  user   User   @relation(fields: [userId], references: [id])
  recipe Recipe @relation(fields: [recipeId], references: [id])

  @@unique([userId, recipeId])
  @@map("ratings")
}

model ActivateToken {
  id          Int       @id @default(autoincrement())
  token       String    @unique
  createdAt   DateTime  @default(now())
  activatedAt DateTime?

  user   User @relation(fields: [userId], references: [id])
  userId Int
}


enum Cuisine {
  Arabian
  Asian
  Italian
  Indian
  Chinese
}
